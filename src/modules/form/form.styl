// Basic form controls: inputs, textareas, buttons

@import "../../styles/core";
@import "./mixins";

// Disabled form element
.is-disabled {
	cursor: default;
	pointer-events: none;
	text-shadow: none;
}


// Bones

.field,
.button {
	field-bones();

	&_block {
		display: block;
		width: 100%;
	}

	&.is-disabled {
		opacity: .4;
	}
}

.field {
	// Hide IE clear button
	&::-ms-clear {
		size: 0;  // Not display:none because: http://bit.ly/1h3UlAH
	}
}

.field_area {
	resize: vertical;   // Vertical resizing for textareas
}

.button {
	no-select();
	position: relative;  // Fixes strange bugs in webkit
	text-decoration: none;
	white-space: nowrap;
	cursor: pointer;

	// Fixing Mozilla's inner paddings
	// https://github.com/nanoblocks/nanoblocks/blob/gh-pages/blocks/button/button.styl
	&::-moz-focus-inner {
		padding: 0;
		border: none;
	}
}

.button + .button,
.field + .field,
.field + .button,
.button + .field {
	margin-left: spacer;
}

.form {
	&_block .field,
	&_block .button,
	&_block .select,  // TODO: Move to select
	&_block .password {  // TODO: Move to password
		display: block;
		width: 100%;
	}

	&__group {
		space(2);
	}

	&__row,
	&__row.is-transit {
		display: flex;
		space();
		&:last-child {
			space(0);
		}
	}

	&__label {
		width: 20%;
		min-width: 6em;
		max-width: 20em;
		padding-right: spacer;
		padding-top: .2em;
		text-align: right;
	}

	&__widget {
		flex: 1;
		padding-left: spacer;
		text-align: left;
	}

	.form__success,
	.form__error {
		display: none;
	}
	&.is-success .form__success {
		display: block;
	}
	&.is-error .form__error {
		display: block;
	}
}

.field-with-unit {
	position: relative;
	font-size: 1em;
	line-height: 1.4;

	&__field {
		width: 100%;
	}

	&__unit {
		position: absolute;
		top: 0;
		right: 0;
	}

	&_left &__unit {
		right: auto;
		left: 0;
	}
}


// Close button
.close {
	line-height: 1;
	outline: 0;

	// Fix <button> appearance: iOS requres <button> or <a href="#">
	padding: 0;
	cursor: pointer;
	background: transparent;
	border: 0;
	appearance: none;
}


// Default skin

modules_default_skin ?= true;
form_default_skin ?= false;


if modules_default_skin or form_default_skin {
	.field,
	.button {
		height: 2em;
		border-radius: form_border_radius;

		&:focus {
			outline: 0;
			border-color: form_focus_color;
		}
	}

	.field,
	.button:active {
		transition: border-color .1s ease-in-out, box-shadow .1s ease-in-out;
	}

	.field {
		padding: .3em .4em;
		background: form_bg_color;
		border: 1px solid form_border_color;
		box-shadow: inset 0 .1em .2em black(.1);

		&:focus {
			box-shadow: inset 0 .1em .2em black(.1), form_focus_shadow;
		}

		&_area {
			height: auto;
		}
	}

	.button {
		button-skin();
		border-radius: form_border_radius;

		&:focus {
			box-shadow: form_focus_shadow;
		}

		&:not(.is-disabled):hover {
			background: linear-gradient(to bottom, form_bg_color, form_lighter_bg_color);
			color: form_button_hover_color;
		}

		&:not(.is-disabled):active {
			button-pressed-skin();
			box-shadow: form_focus_shadow, inset 0 .1em .2em black(.2);
			border-color: form_focus_color;
		}
	}

	// Close button
	.close {
		color: form_button_color;
		font-family: "Helvetica Neue", Arial, sans-serif;
		font-size: 1.2em;
		opacity: .6;

		&:before {
			content: "Ã—";
		}

		+link-hovers() {
			opacity: .8;
		}
	}

	// Alerts
	// Colors from Bootstrap
	.alert {
		space(2);
		padding: spacer;
		font-size: 14px;
		background: #dff0d8;

		&_warning {
			background: #fcf8e3;
		}
		&_error {
			background: #f2dede;
		}
	}

	_unit_padding = 1.4em;  // ~1 character

	.field-with-unit {
		&__field {
			padding-right: _unit_padding;
		}

		&__unit {
			padding: .3em .4em;
		}

		&_left &__field {
			padding-right: 0;
			padding-left: _unit_padding;
		}
	}
}
