// Layout

// Layout wrapper (without margins).
layout-wrapper() {
	display: flex;
	flex-flow: row wrap;
	content: "tamia__layout-row" if DEBUG;
}

// Layout row wrapper (with margins).
layout-row() {
	grid-row-margin();
	layout-wrapper();
}

// Column (simple layout).
//
// part - 1/Nth part of wrapper.
//
// Examples:
//
// ```html
// <div class="row">
//   <div class="col"></div>
//   <div class="col"></div>
// </div>
// ```
//
// ```scss
// .row {
//   layout-row();
// }
// .col {
//   layout-nth(1/2);  // Half
// }
// ```
layout-nth(part) {
	_layout-col();
	_layout-part(part);
}

// Change number of columns.
//
// Use it to change number of columns (defined via layout-nth()) inside media queries.
//
// part - 1/Nth part of wrapper.
layout-change(part) {
	_layout-part(part);
}

// Disable columns.
//
// Alias for layout-change(1).
layout-stop() {
	_layout-part(1);
}

// Center element with specified width and hegith.
//
// width - Width of an element.
// height - Height of an element (default: null).
//
// Examples:
//
// ```scss
// .checkbox:before {
//   center(.8em, .65em);
//   background-image: url("check.svg");
// }
// ```
center(width, height=null) {
	size(width, height);
	left: 50%;
	top: 50%;
	margin-left: (-(@width / 2));
	margin-top: (-(@height / 2));
}

// Flexible columns with left text alignment (to use inside .l-wrap).
//
// Examples:
//
// ```scss
// .block {
//   layout-wrapper();
//   &__first {
//     layout-left();
//   }
//   &__second {
//     layout-right();
//   }
// }
// ```
layout-left() {
	flex: 1;
}

// Flexible columns with right text alignment (to use inside .l-wrap).
layout-right() {
	flex: 1;
	text-align: right;
}

// Space after block.
//
// rows - Number of “rows” (one row = default spacer).
space(rows=1) {
	margin-bottom: rows*spacer;
}

_layout-col() {
	grid-col-padding();
	display: block;
	content: "tamia__layout-col" if DEBUG;
}

_layout-part(part) {
	width: (100% / (1 / part));
}
