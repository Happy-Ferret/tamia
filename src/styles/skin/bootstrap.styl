// Base CSS

// Text selection background color.
selection_color ?= null;

// Global reset.
* {
	padding: 0;
	margin: 0;
	box-sizing: border-box;
}

// Remove borders.
fieldset,
legend {
	border: 0;
}

// Hide the spin-button from input[type="number"]
input[type="number"] {
	-moz-appearance: textfield;
}
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}

// Sticky footer: mystrd.at/modern-clean-css-sticky-footer/
if sticky_footer_height {
	html {
		position: relative;
		min-height: 100%;
	}
	body {
		padding-bottom: sticky_footer_height;
	}
	.footer {
		sticky-footer(sticky_footer_height);
		if max_width {
			&-i {
				max-width: max_width;
				margin-side: auto;
				padding: 0 spacer;
			}
		}
		else {
			padding: 0 spacer;
		}
	}
}

// www.aestheticallyloyal.com/public/optimize-legibility/
h1,
h2,
h3 {
	text-rendering: optimizeLegibility;
}

// Remove ugly bottom border.
abbr {
	border-bottom: none;
}

// Remove markers.
ul {
	list-style: none;
}

// Sane default values
img {
	vertical-align: middle;
}

// Collapse table borders.
table {
	border-collapse: collapse;
	border-spacing: 0;
}

// Do not allow horizontal resizing because it breaks layout.
textarea {
	resize: vertical;
}

// Pre with wrapping.
pre {
	white-space: pre-wrap;
	overflow: auto;
}

// Text selection and iOS tap highlighting.
if selection_color {
	_selection_color = selection_color;
}
else if light(bg_color) {
	_selection_color = rgba(darken(bg_color, 60), .5);
}
else {
	_selection_color = rgba(lighten(bg_color, 60), .5);
}
::selection {
	color: base_color;
	background: _selection_color;
	text-shadow: none;
}
a:link {
	-webkit-tap-highlight-color: rgba(_selection_color, .25);
}

// Content max width.
if content_max_width {
	.content {
		max-width: content_max_width;
		margin: 0 auto;
	}
}
